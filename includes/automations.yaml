# -------- Automations -------- #
automation:

  # -------- alarm -------- #
  - alias: '[ALARM] Activate alarm when front door is opened'
    id: 'alarm_activation'
    mode: single
    trigger:
      - platform: state
        entity_id: binary_sensor.door_sensor_eingang_contact
        to: "off"
    condition:
      - condition: state
        entity_id: input_boolean.alarm_armed
        state: "on"
    action:
      - service: script.activate_alarm_sequence

  # -------- blinds -------- #
  - alias: '[BLINDS] Prevent blinds from opening when window links is open'
    id: 'blinds_prevent_opening_left'
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id: cover.blinds_wohnzimmer_links
        attribute: current_position
        below: 100
    condition:
      - condition: state
        entity_id: binary_sensor.window_sensor_wohnzimmer_links_contact
        state: "on"
    action:
      - service: cover.stop_cover
        target:
          entity_id: cover.blinds_wohnzimmer_links
      - service: cover.open_cover
        target:
          entity_id: cover.blinds_wohnzimmer_links
  - alias: '[BLINDS] Prevent blinds from opening when window rechts is open'
    id: 'blinds_prevent_opening_right'
    mode: parallel
    trigger:
      - platform: numeric_state
        entity_id: cover.blinds_wohnzimmer_rechts
        attribute: current_position
        below: 100
    condition:
      - condition: state
        entity_id: binary_sensor.window_sensor_wohnzimmer_rechts_contact
        state: "on"
    action:
      - service: cover.stop_cover
        target:
          entity_id: cover.blinds_wohnzimmer_rechts
      - service: cover.open_cover
        target:
          entity_id: cover.blinds_wohnzimmer_rechts

  # -------- heating -------- #
  - alias: '[HEATING] Turn on heating for work'
    id: 'heating_work'
    mode: single
    trigger:
      - platform: state
        entity_id: schedule.heating_work
        to: "on"
      - platform: homeassistant
        event: start
    action:
      - repeat:
          while:
            condition: state
            entity_id: schedule.heating_work
            state: "on"
          sequence:
            - delay:
                minutes: 1
            - condition: state
              entity_id: input_boolean.heating
              state: "on"
            - condition: state
              entity_id: input_boolean.vacation
              state: "off"
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 23
              target:
                entity_id: climate.climate_arbeitszimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 22
              target:
                entity_id: climate.climate_wohnzimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 19
              target:
                entity_id: climate.climate_kuche
            - delay:
                minutes: 10

  - alias: '[HEATING] Turn on heating after work'
    id: 'heating_after_work'
    mode: single
    trigger:
      - platform: state
        entity_id: schedule.heating_after_work
        to: "on"
      - platform: homeassistant
        event: start
    action:
      - repeat:
          while:
            condition: state
            entity_id: schedule.heating_after_work
            state: "on"
          sequence:
            - delay:
                minutes: 1
            - condition: state
              entity_id: input_boolean.heating
              state: "on"
            - condition: state
              entity_id: input_boolean.vacation
              state: "off"
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 22
              target:
                entity_id: climate.climate_arbeitszimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 23
              target:
                entity_id: climate.climate_wohnzimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_kuche
            - delay:
                minutes: 10

  - alias: '[HEATING] Turn on heating for night'
    id: 'heating_night'
    mode: single
    trigger:
      - platform: state
        entity_id: schedule.heating_night
        to: "on"
      - platform: homeassistant
        event: start
    action:
      - repeat:
          while:
            condition: state
            entity_id: schedule.heating_night
            state: "on"
          sequence:
            - delay:
                minutes: 1
            - condition: state
              entity_id: input_boolean.heating
              state: "on"
            - condition: state
              entity_id: input_boolean.vacation
              state: "off"
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_arbeitszimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_wohnzimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_kuche
            - delay:
                minutes: 10

  - alias: '[HEATING] Turn on heating for vacation mode'
    id: 'heating_vacation'
    mode: single
    trigger:
      - platform: state
        entity_id: input_boolean.vacation
        to: "on"
      - platform: homeassistant
        event: start
    action:
      - repeat:
          while:
            condition: state
            entity_id: input_boolean.vacation
            state: "on"
          sequence:
            - delay:
                minutes: 1
            - condition: state
              entity_id: input_boolean.heating
              state: "on"
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_arbeitszimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_wohnzimmer
            - service: climate.set_temperature
              data:
                hvac_mode: heat
                temperature: 18
              target:
                entity_id: climate.climate_kuche
            - delay:
                minutes: 10

  # -------- vacation mode -------- #
  - alias: '[LIGHTS] Turn on the lights in vacation mode'
    mode: single
    trigger:
      - platform: state
        entity_id: schedule.vacation_lights
        to: "on"
    action:
      - condition: state
        entity_id: input_boolean.vacation
        state: "on"
      - service: scene.turn_on
        entity_id: scene.vacation
  - alias: '[LIGHTS] Turn off the lights in vacation mode'
    mode: single
    trigger:
      platform: state
      entity_id: schedule.vacation_lights
      to: "off"
    action:
      - condition: state
        entity_id: input_boolean.vacation
        state: "on"
      - service: scene.turn_on
        entity_id: scene.off

  # -------- vacuum -------- #
  - alias: '[VACUUM] Run the vacuum on workdays in the apartment except the office'
    mode: single
    trigger:
      platform: state
      entity_id: schedule.vacuum_workday_apartment
      to: "on"
    action:
      - condition: state
        entity_id: input_boolean.vacation
        state: "off"
      - condition: state
        entity_id: input_boolean.vacuum
        state: "on"
      - service: script.vacuum_apartment_except_office
  - alias: '[VACUUM] Run the vacuum on workdays in the office'
    mode: single
    trigger:
      platform: state
      entity_id: schedule.vacuum_workday_office
      to: "on"
    action:
      - condition: state
        entity_id: input_boolean.vacation
        state: "off"
      - condition: state
        entity_id: input_boolean.vacuum
        state: "on"
      - service: script.vacuum_office
  - alias: '[VACUUM] Run the vacuum on weekends'
    mode: single
    trigger:
      platform: state
      entity_id: schedule.vacuum_weekend
      to: "on"
    action:
      - condition: state
        entity_id: input_boolean.vacation
        state: "off"
      - condition: state
        entity_id: input_boolean.vacuum
        state: "on"
      - service: vacuum.start
        target:
          device_id: vacuum.roborock_s7

  # -------- flur button toggle -------- #
  - alias: '[BUTTON] Toggle everything with the flur button'
    mode: single
    trigger:
      platform: state
      entity_id: sensor.button_flur_action
      to: "on"
    action:
      - service: switch.toggle
        target:
          entity_id: switch.flur_button

  # -------- humidifier -------- #
  - alias: '[CLIMATE] Turn on the humidifier when the humidity gets too high'
    mode: single
    trigger:
      platform: numeric_state
      entity_id: sensor.temperature_humidity_kuche_humidity
      above: 65
    action:
      - service: switch.turn_on
        entity_id: switch.dehumidifier_kuche
  - alias: '[CLIMATE] Turn off the humidifier when the humidity is okay'
    mode: single
    trigger:
      - platform: numeric_state
        entity_id: sensor.temperature_humidity_kuche_humidity
        below: 60
    action:
      - service: switch.turn_off
        entity_id: switch.dehumidifier_kuche

  # -------- abstellraum lights -------- #
  - alias: '[LIGHTS] Turn on the Abstellraum light on occupancy'
    mode: single
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_abstellraum_occupancy
      from: "off"
      to: "on"
    action:
      - service: light.turn_on
        entity_id: light.light_decke_abstellraum
        data:
          brightness: 254
      - repeat:
          while:
            condition: state
            entity_id: binary_sensor.motion_sensor_abstellraum_occupancy
            state: "on"
          sequence:
            - delay: 60
      - service: light.turn_off
        entity_id: light.light_decke_abstellraum

  # -------- flur lights -------- #
  - alias: '[LIGHTS] Turn on the Flur light on occupancy'
    mode: single
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_flur_occupancy
      from: "off"
      to: "on"
    action:
      - service: light.turn_on
        entity_id: light.light_decke_flur
  - alias: '[LIGHTS] Turn off the Flur light if there is no occupancy'
    mode: single
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_flur_occupancy
      from: "on"
      to: "off"
    action:
      - service: light.turn_off
        entity_id: light.light_decke_flur

  # -------- unter bett lights -------- #
  - alias: '[LIGHTS] Turn on the Bett unten light on occupancy'
    mode: restart
    trigger:
      platform: state
      entity_id: binary_sensor.motion_sensor_bett_occupancy
      from: "off"
      to: "on"
    action:
      - service: light.turn_on
        entity_id: light.light_ambient_bett_unten
        data:
          brightness: 254
      - repeat:
          while:
            condition: state
            entity_id: binary_sensor.motion_sensor_bett_occupancy
            state: "on"
          sequence:
            - delay: 60
      - service: light.turn_off
        entity_id: light.light_ambient_bett_unten

  # -------- set brightness automatically -------- #
  - alias: '[LIGHTS] Crank up the brightness for the projector ambient light to prevent hissing'
    mode: restart
    trigger:
      platform: state
      entity_id: light.light_ambient_beamer
      from: "off"
      to: "on"
    action:
      - service: light.turn_on
        entity_id: light.light_ambient_beamer
        data:
          brightness: 255

  # -------- system stuff -------- #
  - alias: '[SYSTEM] Set default theme at startup'
    trigger:
      platform: homeassistant
      event: start
    action:
      service: frontend.set_theme
      data:
        name: minimalist-mobile-tapbar
  - alias: "[SYSTEM] Backup Home Assistant every night at 3 AM"
    trigger:
      platform: time
      at: "03:00:00"
    action:
      alias: "Create backup now"
      service: backup.create
